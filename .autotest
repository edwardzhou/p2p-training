require 'autotest/timestamp'
require 'active_support'

module Autotest::GnomeNotify

  # Time notification will be displayed before disappearing automatically
  APP_TITLE = "p2p-training"
  EXPIRATION_IN_SECONDS = 8
  ERROR_STOCK_ICON = "gtk-cancel"
  SUCCESS_STOCK_ICON = "gtk-apply"
  WARNING_STOCK_ICON = "gtk-info"

  def self.icon
    # icons from http://www.famfamfam.com/lab/icons/silk/
=begin
    path = File.join(File.dirname(__FILE__), "/.autotest_images/")
    {
      :green => "#{path}pass.png",
      :red    => "#{path}fail.png",
      :info   => "#{path}pending.png"
    }
=end
    {
        :green => SUCCESS_STOCK_ICON,
        :red    => ERROR_STOCK_ICON,
        :info   => WARNING_STOCK_ICON

    }
  end


  # Convenience method to send an error notification message
  #
  # [stock_icon]   Stock icon name of icon to display
  # [title]        Notification message title
  # [message]      Core message for the notification
  def self.notify stock_icon, title, message
    #p icon[stock_icon]
    options = "-t #{EXPIRATION_IN_SECONDS * 1000} -i #{icon[stock_icon]}"
    cmd = "notify-send #{options} '#{title} test result' '#{message}'"
    #p cmd
    system cmd
  end

  def self.parse_results(at)
    ran_results_re = /\d+ example(s?), \d+ failure(s?)(?:, \d+ pending)?/
    completed = at.results[ran_results_re]
    ran_results = completed.scan(/(\d+) (\w+)/).map {|v, k| [k.singularize, v.to_i]}
    results = Hash[*ran_results.flatten]
  end

  Autotest.add_hook :initialize do |at|
    at.add_exception(%r{^\./\.git})
    at.add_exception(%r{^\./db})
    at.add_exception(%r{^\./log})
  end

  Autotest.add_hook :red do |at|
    result = parse_results(at)
    notify :red, APP_TITLE, "#{at.files_to_test.size} tests failed, #{result['pending']} pending."
  end

  Autotest.add_hook :green do |at|
    result = parse_results(at)
    if (!result["pending"].nil?) && (result["pending"] > 0) then
      notify :info, APP_TITLE, "#{result['example']} executed, #{result['pending']} pending."
    else
      notify :green, APP_TITLE, "#{result['example']} executed."
    end

  end

end
